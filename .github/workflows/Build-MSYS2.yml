name: Building on Windows with MSYS2 (Matrix)

on:
  workflow_call:
    inputs:
      jobs:
        description: 'JSON list with environment fields, naming the system and backend for compilation.'
        required: true
        type: string
      windows_image:
        description: 'Name of the Windows image.'
        required: false
        default: 'windows-latest'
        type: string
      windows_artifact:
        description: 'Name of the Windows build artifact.'
        required: true
        type: string

jobs:
  Build:
    name: Build GHDL on Windows Server + MSYS2
    runs-on: ${{ inputs.windows_image }}

    env:
      msys2_packages: "make"
      common_packages: "gcc:p gcc-ada:p diffutils:p"
      mcode_packages: ""
      llvm_packages: "llvm:p clang:p"

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.jobs) }}

    defaults:
      run:
        shell: "msys2 {0}"

    steps:
      - name: ‚è¨ Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ghdl/ghdl

      - name: 'üü¶ Setup MSYS2 for ${{ matrix.runtime }}'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.runtime }}
          update: true
          install: ${{ env.msys2_packages }}
          pacboy: "${{ env.common_packages }} ${{ env.mcode_packages }} ${{ env.llvm_packages }}"

      - name: Check build environemnt
        run: |
          echo "which gnat:        $(which gnat) ($($(which gnat) --version))"
          echo "which gnatmake:    $(which gnatmake) ($($(which gnatmake) --version))"
          echo "which llvm-config: $(which llvm-config) ($($(which llvm-config) --version))"

      - name: Prepare build environemnt
        run: |
          mkdir -p build/${{ matrix.backend }}
          mkdir -p install

      - name: ‚öô Configure
        run: |
          cd build/${{ matrix.backend }}
          [ '${{ matrix.backend }}' == 'llvm' ] && LLVM_ARGS='--with-llvm-config' || unset LLVM_ARGS

          NPROC=$(nproc)
          GNATMAKE="gnatmake -j$NPROC" \
          MAKE="make -j$NPROC" \
          ../../configure --prefix=../../install $LLVM_ARGS

      - name: üî® Make
        run: |
          cd build/${{ matrix.backend }}
          make

      - name: üìã Install
        run: |
          cd build/${{ matrix.backend }}
          make install

      - name: üì§ Upload '${{ inputs.windows_artifact }}-${{ matrix.runtime }}-${{ matrix.backend }}' artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.windows_artifact }}-${{ matrix.runtime }}-${{ matrix.backend }}
          path: ./install
          if-no-files-found: error
          retention-days: 1

  Test:
    name: Test GHDL on Windows Server + MSYS2
    runs-on: ${{ inputs.windows_image }}
    needs:
      - Build

    env:
      llvm_packages: "llvm:p"

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.jobs) }}

    defaults:
      run:
        shell: "msys2 {0}"

    steps:
      - name: ‚è¨ Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ghdl/ghdl

      - name: 'üü¶ Setup MSYS2 for ${{ matrix.runtime }}'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.runtime }}
          update: true
          pacboy: "${{ env.llvm_packages }}"

      - name: üì• Download artifacts '${{ inputs.windows_artifact }}-${{ matrix.runtime }}-${{ matrix.backend }}' from 'Build' job
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.windows_artifact }}-${{ matrix.runtime }}-${{ matrix.backend }}
          path: install

      - name: Prepare test environment
        run: |
          echo "PATH=$(pwd)/install/bin:$PATH" >> $GITHUB_ENV

      - name: Sanity checks
        run: |
          echo "PATH:       $PATH"
          echo "which ghdl: $(which ghdl)"
          ghdl version

      - name: Run tests in testsuite
        run: |
          cd testsuite
          ./testsuite.sh

  Package:
    name: Package GHDL on Windows Server + MSYS2
    runs-on: windows-latest
    needs:
      - Build

    env:
      msys2_packages: ""
      common_packages: ""
      mcode_packages: ""
      llvm_packages: "llvm:p"

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.jobs) }}

    defaults:
      run:
        shell: "msys2 {0}"

    steps:
      - name: ‚è¨ Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ghdl/ghdl

      - name: 'üü¶ Setup MSYS2 for ${{ matrix.runtime }}'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.runtime }}
          update: true
          install: ${{ env.msys2_packages }}
          pacboy: "${{ env.common_packages }} ${{ env.mcode_packages }} ${{ env.llvm_packages }}"

  Install:
    name: Install and Test GHDL on Windows Server + MSYS2
    runs-on: windows-latest
    needs:
      - Package

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.jobs) }}

    defaults:
      run:
        shell: "msys2 {0}"

    steps:
      - name: ‚è¨ Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ghdl/ghdl

      - name: 'üü¶ Setup MSYS2 for ${{ matrix.runtime }}'
        uses: msys2/setup-msys2@v2
        with:
          update: true
