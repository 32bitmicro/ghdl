name: Build, Package and Test GHDL

on:
  push:
  pull_request:

jobs:
# Building
#   Ubuntu (x86-64)
#     mcode + GPL
#     gcc
#   macOS (x86-64)
#     mcode
#     llvm
#     llvm-jit
#   macOS (aarch64)
#     llvm
#     llvm-jit

# Windows Standalone - ZIP
#   UCRT64 - llvm

# pyGHDL wheel
#   macOS
#     Python 3.10
#     Python 3.11
#     Python 3.12

# Python code coverage
# Publish results
# Python test results
#   merge

# Sanity Check pyGHDL
#

# Release Page (on tag)
#   Assets

  Params:
    uses: ./.github/workflows/Parameters.yml
    with:
      package_name: "ghdl"
      library_name: "libghdl"
      pyghdl_name:  "pyGHDL"
      testsuites:   "sanity"         # disable parameter to fall back to 'all'

  Ubuntu:
    uses: ./.github/workflows/Build-Ubuntu.yml
    needs:
      - Params
    strategy:
      fail-fast: false
      matrix:
        include:
#          - {'icon': '🐧🟨', 'backend': 'mcode',    'ubuntu_version': '22.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟨', 'backend': 'llvm',     'ubuntu_version': '22.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟨', 'backend': 'llvm-jit', 'ubuntu_version': '22.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟨', 'backend': 'gcc',      'ubuntu_version': '22.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
          - {'icon': '🐧🟩', 'backend': 'mcode',    'ubuntu_version': '24.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟩', 'backend': 'llvm',     'ubuntu_version': '24.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟩', 'backend': 'llvm-jit', 'ubuntu_version': '24.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟩', 'backend': 'gcc',      'ubuntu_version': '24.04', 'testsuites': 'all' }                                    # 'all', 'none' or list of testsuites
    with:
      ubuntu_version:   ${{ matrix.ubuntu_version }}
      backend:          ${{ matrix.backend }}
      testsuites:       ${{ matrix.testsuites }}
#      ubuntu_artifact:  ${{ needs.Params.outputs.ghdl_basename }}-ubuntu-${{ matrix.ubuntu_version }}-x86_64
      libghdl_artifact: ${{ needs.Params.outputs.libghdl_basename }}-ubuntu-${{ matrix.ubuntu_version }}-x86_64
#      html_artifact:   'documentation-HTML'
#      latex_document:  'ghdl'
#      latex_artifact:  'documentation-LaTeX'
##      pdf_artifact:    'documentation-PDF'
    secrets: inherit

  macOS:
    uses: ./.github/workflows/Build-MacOS.yml
    needs:
      - Params
    strategy:
      fail-fast: false
      matrix:
        include:
#          - {'icon': '🍎🟧', 'backend': 'mcode',    'macos_image': 'macos-12', 'gnat_arch': 'x86_64',  'gnat_version': '14.1.0-3', 'testsuites': 'none'}  # '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🍎🟧', 'backend': 'llvm',     'macos_image': 'macos-12', 'gnat_arch': 'x86_64',  'gnat_version': '14.1.0-3', 'testsuites': 'none'}  # '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🍎🟨', 'backend': 'mcode',    'macos_image': 'macos-13', 'gnat_arch': 'x86_64',  'gnat_version': '14.1.0-3', 'testsuites': 'none'}  # '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🍎🟨', 'backend': 'llvm',     'macos_image': 'macos-13', 'gnat_arch': 'x86_64',  'gnat_version': '14.1.0-3', 'testsuites': 'none'}  # '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
###       - {'icon': '🍏🟩', 'backend': 'mcode',    'macos_image': 'macos-14', 'gnat_arch': 'aarch64', 'gnat_version': '14.1.0-3', 'testsuites': 'none'}                                    # mcode not yet supported for aarch64
#          - {'icon': '🍏🟩', 'backend': 'llvm',     'macos_image': 'macos-14', 'gnat_arch': 'aarch64', 'gnat_version': '14.1.0-3', 'testsuites': 'none'}  # '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
          - {'icon': '🍏🟩', 'backend': 'llvm-jit', 'macos_image': 'macos-14', 'gnat_arch': 'aarch64', 'gnat_version': '14.1.0-3', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
    with:
      macos_image:    ${{ matrix.macos_image }}
      gnat_arch:      ${{ matrix.gnat_arch }}
      gnat_version:   ${{ matrix.gnat_version }}
      backend:        ${{ matrix.backend }}
      testsuites:     ${{ matrix.testsuites }}
      macos_artifact: ${{ needs.Params.outputs.ghdl_basename }}-${{ matrix.macos_image }}-${{ matrix.gnat_arch }}
    secrets: inherit

  Windows:
    uses: ./.github/workflows/Build-MSYS2.yml
    needs:
      - Params
    strategy:
      fail-fast: false
      matrix:
        include:
###       - {'icon': '🪟', 'runtime': 'mingw32', 'backend': 'mcode',    'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # No gcc-ada package for MinGW32, support was dropped
#          - {'icon': '🪟', 'runtime': 'mingw64', 'backend': 'mcode',    'testsuites': '${{ needs.Params.outputs.testsuites }}'}
#          - {'icon': '🪟', 'runtime': 'mingw64', 'backend': 'llvm',     'testsuites': 'sanity gna synth vpi vhpi'}                # no vests (too slow)
#          - {'icon': '🪟', 'runtime': 'mingw64', 'backend': 'llvm-jit', 'testsuites': 'sanity vpi vhpi'}                          # gna and synth fail (#2726); no vests (too slow)
          - {'icon': '🪟', 'runtime': 'ucrt64',  'backend': 'mcode',    'testsuites': '${{ needs.Params.outputs.testsuites }}'}
#          - {'icon': '🪟', 'runtime': 'ucrt64',  'backend': 'llvm',     'testsuites': 'sanity gna synth vpi vhpi'}                # no vests (too slow)
#          - {'icon': '🪟', 'runtime': 'ucrt64',  'backend': 'llvm-jit', 'testsuites': 'sanity vpi vhpi'}                          # gna and synth fail (#2726); no vests (too slow)
    with:
      runtime:          ${{ matrix.runtime }}
      backend:          ${{ matrix.backend }}
      testsuites:       ${{ matrix.testsuites }}
#      msys2_artifact:   ${{ needs.Params.outputs.ghdl_basename }}-MSYS2
#      pacman_artifact:  ${{ needs.Params.outputs.ghdl_basename }}-Pacman
#      windows_artifact: ${{ needs.Params.outputs.ghdl_basename }}-Windows
      libghdl_artifact: ${{ needs.Params.outputs.libghdl_basename }}-MSYS2
    secrets: inherit

  Python:
    uses: ./.github/workflows/Check-pyGHDL.yml
    needs:
      - Params
#    with:
#      black: false

  StaticTypeCheck:
    uses: pyTooling/Actions/.github/workflows/StaticTypeCheck.yml@r1
    needs:
      - Params
    with:
      requirements: mypy lxml
      commands: |
        mypy --html-report htmlmypy -p pyGHDL
      html_report: 'htmlmypy'
      html_artifact: 'pyGHDL-typing-HTML'

  DocCoverage:
    uses: pyTooling/Actions/.github/workflows/CheckDocumentation.yml@r1
    needs:
      - Params
    with:
      directory: pyGHDL

  pyGHDL:
    uses: ./.github/workflows/Package-pyGHDL.yml
    needs:
      - Params
      - Ubuntu
      - Windows
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': '🐧', 'name': 'Ubuntu',  'image': 'ubuntu-24.04',   'libghdl_artifact': 'ubuntu-24.04-x86_64', 'pyghdl_artifact': 'Ubuntu-24.04-x86_64'}
###       - {'icon': '🍏', 'name': 'macOS',   'image': 'macos-14',       'libghdl_artifact': 'macos-14-aarch64',    'pyghdl_artifact': 'macOS-14-aarch64'}
          - {'icon': '🪟', 'name': 'Windows', 'image': 'windows-latest', 'libghdl_artifact': 'MSYS2-ucrt64',        'pyghdl_artifact': 'Windows-x86_64'}
        py:
          - {'icon': '🟠', 'version': "3.9"}
          - {'icon': '🟡', 'version': "3.10"}
          - {'icon': '🟢', 'version': "3.11"}
          - {'icon': '🟢', 'version': "3.12"}
    with:
      os_name:          ${{ matrix.os.name }}
      os_image:         ${{ matrix.os.image }}
      python_icon:      ${{ matrix.py.icon }}
      python_version:   ${{ matrix.py.version }}
      libghdl_artifact: ${{ needs.Params.outputs.libghdl_basename }}-${{ matrix.os.libghdl_artifact }}
      pyghdl_artifact:  ${{ needs.Params.outputs.pyghdl_basename }}-${{ matrix.os.pyghdl_artifact }}-Python-${{ matrix.py.version }}
      unittest_xml_artifact: 'pyGHDL-Unittest-XML'
      coverage: true
      coverage_sqlite_artifact: 'pyGHDL-Coverage-SQLite'
#      coverage_xml_artifact: 'pyGHDL-Coverage-XML'
#      coverage_json_artifact: 'pyGHDL-Coverage-JSON'
#      coverage_html_artifact: 'pyGHDL-Coverage-HTML'
    secrets: inherit

  PublishCoverageResults:
    uses: pyTooling/Actions/.github/workflows/PublishCoverageResults.yml@r1
    needs:
      - pyGHDL
    with:
      coverage_json_artifact: 'pyGHDL-Coverage-JSON'
      coverage_html_artifact: 'pyGHDL-Coverage-HTML'
    secrets:
      codacy_token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  PublishTestResults:
    uses: pyTooling/Actions/.github/workflows/PublishTestResults.yml@dev
    needs:
      - pyGHDL
    with:
      merged_junit_artifact: 'pyGHDL-Unittest-XML'
      additional_merge_args: '"--pytest=rewrite-dunder-init;reduce-depth:pytest.testsuite.pyunit"'

  IntermediateCleanUp:
    uses: pyTooling/Actions/.github/workflows/IntermediateCleanUp.yml@r1
    needs:
      - PublishCoverageResults
      - PublishTestResults
    with:
      sqlite_coverage_artifacts_prefix: 'pyGHDL-Coverage-SQLite-'
      xml_unittest_artifacts_prefix: 'pyGHDL-Unittest-XML-'

#  GNATdoc:
#    uses: ./.github/workflows/Documentation-GNAT.yml
#    with:
#      ubuntu_image:  "ubuntu-20.04"            # gnat-gps (incl. GNATdoc) is limited to Ubuntu 20.04
#      html_artifact: "documentation-gnatdoc"


  PublishToGitHubPages:
    needs:
#      - GNATdoc
      - Ubuntu
    uses: ./.github/workflows/Publish-GitHubPages.yml

  Nightly:
    runs-on: ubuntu-24.04
    needs:
      - Ubuntu
      - macOS
      - Windows
      - PublishToGitHubPages
      - Python
      - StaticTypeCheck
      - DocCoverage
      - PublishCoverageResults
      - PublishTestResults
    steps:
      - name: "Dummy"
        run: echo "Dummy"

  Release:
    runs-on: ubuntu-24.04
    needs:
      - Ubuntu
      - macOS
      - Windows
      - PublishToGitHubPages
      - Python
      - StaticTypeCheck
      - DocCoverage
      - PublishCoverageResults
      - PublishTestResults
    steps:
      - name: "Dummy"
        run: echo "Dummy"
