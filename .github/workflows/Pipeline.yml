name: Build, Package and Test GHDL

on:
  push:
  pull_request:

jobs:
# Building
#   Ubuntu (x86-64)
#     mcode + GPL
#     gcc
#   macOS (x86-64)
#     mcode
#     llvm
#     llvm-jit
#   macOS (aarch64)
#     llvm
#     llvm-jit

# Windows Standalone - ZIP
#   UCRT64 - llvm

# pyGHDL wheel
#   Windows
#     Python 3.10
#     Python 3.11
#     Python 3.12
#   Linux
#     Python 3.10
#     Python 3.11
#     Python 3.12
#   macOS
#     Python 3.10
#     Python 3.11
#     Python 3.12

# Python code coverage
# Publish results
# Python test results
#   merge

# Sanity Check pyGHDL
#

# Release Page (on tag)
#   Assets

  Params:
    uses: ./.github/workflows/Parameters.yml
    with:
      package_name: "ghdl"
      library_name: "libghdl"
      testsuites:   "sanity"         # disable parameter to fall back to 'all'

  Ubuntu:
    uses: ./.github/workflows/Build-Ubuntu.yml
    needs:
      - Params
    strategy:
      fail-fast: false
      matrix:
        include:
#          - {'icon': '🐧🟨', 'backend': 'mcode',    'ubuntu_version': '22.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟨', 'backend': 'llvm',     'ubuntu_version': '22.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟨', 'backend': 'llvm-jit', 'ubuntu_version': '22.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟨', 'backend': 'gcc',      'ubuntu_version': '22.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
          - {'icon': '🐧🟩', 'backend': 'mcode',    'ubuntu_version': '24.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟩', 'backend': 'llvm',     'ubuntu_version': '24.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟩', 'backend': 'llvm-jit', 'ubuntu_version': '24.04', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🐧🟩', 'backend': 'gcc',      'ubuntu_version': '24.04', 'testsuites': 'all' }                                    # 'all', 'none' or list of testsuites
    with:
      ubuntu_version:  ${{ matrix.ubuntu_version }}
      backend:         ${{ matrix.backend }}
      testsuites:      ${{ matrix.testsuites }}
      ubuntu_artifact: ${{ needs.Params.outputs.ghdl_basename }}-${{ matrix.ubuntu_image }}-x86_64
      html_artifact:  'documentation-html'
      latex_document: 'ghdl'
      latex_artifact: 'documentation-latex'
#      pdf_artifact:   'documentation-pdf'
    secrets: inherit

  macOS:
    uses: ./.github/workflows/Build-MacOS.yml
    needs:
      - Params
    strategy:
      fail-fast: false
      matrix:
        include:
#          - {'icon': '🍎🟧', 'backend': 'mcode',    'macos_image': 'macos-12', 'gnat_arch': 'x86_64',  'gnat_version': '14.1.0-3', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🍎🟧', 'backend': 'llvm',     'macos_image': 'macos-12', 'gnat_arch': 'x86_64',  'gnat_version': '14.1.0-3', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🍎🟨', 'backend': 'mcode',    'macos_image': 'macos-13', 'gnat_arch': 'x86_64',  'gnat_version': '14.1.0-3', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🍎🟨', 'backend': 'llvm',     'macos_image': 'macos-13', 'gnat_arch': 'x86_64',  'gnat_version': '14.1.0-3', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
###       - {'icon': '🍏🟩', 'backend': 'mcode',    'macos_image': 'macos-14', 'gnat_arch': 'aarch64', 'gnat_version': '14.1.0-3', 'testsuites': 'none'}                                    # mcode not yet supported for aarch64
          - {'icon': '🍏🟩', 'backend': 'llvm',     'macos_image': 'macos-14', 'gnat_arch': 'aarch64', 'gnat_version': '14.1.0-3', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
#          - {'icon': '🍏🟩', 'backend': 'llvm-jit', 'macos_image': 'macos-14', 'gnat_arch': 'aarch64', 'gnat_version': '14.1.0-3', 'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # 'all', 'none' or list of testsuites
    with:
      macos_image:    ${{ matrix.macos_image }}
      gnat_arch:      ${{ matrix.gnat_arch }}
      gnat_version:   ${{ matrix.gnat_version }}
      backend:        ${{ matrix.backend }}
      testsuites:     ${{ matrix.testsuites }}
      macos_artifact: ${{ needs.Params.outputs.ghdl_basename }}-${{ matrix.macos_image }}-${{ matrix.gnat_arch }}
    secrets: inherit

  Windows:
    uses: ./.github/workflows/Build-MSYS2.yml
    needs:
      - Params
    strategy:
      fail-fast: false
      matrix:
        include:
###       - {'icon': '🪟', 'runtime': 'mingw32', 'backend': 'mcode',    'testsuites': '${{ needs.Params.outputs.testsuites }}'}  # No gcc-ada package for MinGW32, support was dropped
#          - {'icon': '🪟', 'runtime': 'mingw64', 'backend': 'mcode',    'testsuites': '${{ needs.Params.outputs.testsuites }}'}
#          - {'icon': '🪟', 'runtime': 'mingw64', 'backend': 'llvm',     'testsuites': 'sanity gna synth vpi vhpi'}                # no vests (too slow)
#          - {'icon': '🪟', 'runtime': 'mingw64', 'backend': 'llvm-jit', 'testsuites': 'sanity vpi vhpi'}                          # gna and synth fail (#2726); no vests (too slow)
          - {'icon': '🪟', 'runtime': 'ucrt64',  'backend': 'mcode',    'testsuites': '${{ needs.Params.outputs.testsuites }}'}
#          - {'icon': '🪟', 'runtime': 'ucrt64',  'backend': 'llvm',     'testsuites': 'sanity'}  # gna synth vpi vhpi'}                # no vests (too slow)
#          - {'icon': '🪟', 'runtime': 'ucrt64',  'backend': 'llvm-jit', 'testsuites': 'sanity vpi vhpi'}                          # gna and synth fail (#2726); no vests (too slow)
    with:
      runtime:          ${{ matrix.runtime }}
      backend:          ${{ matrix.backend }}
      testsuites:       ${{ matrix.testsuites }}
      msys2_artifact:   ${{ needs.Params.outputs.ghdl_basename }}-msys2
      pacman_artifact:  ${{ needs.Params.outputs.ghdl_basename }}-pacman
      windows_artifact: ${{ needs.Params.outputs.ghdl_basename }}-windows
      libghdl_artifact: ${{ needs.Params.outputs.libghdl_basename }}-msys2
    secrets: inherit

  Python:
    uses: ./.github/workflows/Build-pyGHDL.yml
    with:
      black: false

  pyGHDL:
    uses: ./.github/workflows/Package-pyGHDL.yml
    needs:
      - Params
#      - Ubuntu
      - Windows
    strategy:
      fail-fast: false
      matrix:
        include:
          - {'icon': '🪟', 'os': 'Windows', 'os_image': 'windows-latest', 'libghdl_artifact': 'msys2-ucrt64'}
#          - {'icon': '🪟', 'os': 'Ubuntu',  'os_image': 'ubuntu-24.04',   'libghdl_artifact': 'ubuntu-24.04'}
    with:
      os:               ${{ matrix.os }}
      os_image:         ${{ matrix.os_image }}
      backend:          'mcode'
      libghdl_artifact: ${{ needs.Params.outputs.libghdl_basename }}-${{ matrix.libghdl_artifact }}
      jobs: |
        [
          {'pyicon': '🟡', 'python_version': '3.10'},
          {'pyicon': '🟢', 'python_version': '3.11'},
          {'pyicon': '🟢', 'python_version': '3.12'}
        ]
    secrets: inherit

#  GNATdoc:
#    uses: ./.github/workflows/Documentation-GNAT.yml
#    with:
#      ubuntu_image:  "ubuntu-20.04"            # gnat-gps (incl. GNATdoc) is limited to Ubuntu 20.04
#      html_artifact: "documentation-gnatdoc"


  PublishToGitHubPages:
    needs:
#      - GNATdoc
      - Ubuntu
    uses: ./.github/workflows/Publish-GitHubPages.yml

  Nightly:
    runs-on: ubuntu-24.04
    needs:
      - Ubuntu
      - macOS
      - Windows
      - PublishToGitHubPages
      - Python
      - pyGHDL
    steps:
      - name: "Dummy"
        run: echo "Dummy"

  Release:
    runs-on: ubuntu-24.04
    needs:
      - Ubuntu
      - macOS
      - Windows
      - PublishToGitHubPages
      - Python
      - pyGHDL
    steps:
      - name: "Dummy"
        run: echo "Dummy"
