name: Building on macOS 14 (aarch64) (Matrix)

on:
  workflow_call:
    inputs:
      jobs:
        description: 'JSON list with environment fields, naming the system and backend for compilation.'
        required: true
        type: string
      macos_image:
        description: 'Name of the macOS image.'
        required: false
        default: 'macos-latest'
        type: string
      gnat_version:
        description: 'Version of the downloaded GNAT compiler (pre-compiled) from https://github.com/alire-project/GNAT-FSF-builds'
        required: false
        default: '14.1.0-3'
        type: string
      macos_artifact:
        description: 'Name of the macOS build artifact.'
        required: true
        type: string

jobs:
  Build:
    name: Build GHDL on macOS 14.0 (aarch64)
    runs-on: ${{ inputs.macos_image }}

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.jobs) }}

    env:
      GNAT_ARCH: "aarch64"

    defaults:
      run:
        shell: bash

    steps:
      - name: ⏬ Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ghdl/ghdl

      - name: Install dependencies
        run: |
          brew install llvm

          echo "LLVM_BINARY_PATH=$(brew --prefix llvm)/bin" >> $GITHUB_ENV

      - name: Install GNAT
        run: |
          GNAT_NAME="gnat-${{ env.GNAT_ARCH }}-darwin-${{ inputs.gnat_version }}"
          GNAT_URL="https://github.com/alire-project/GNAT-FSF-builds/releases/download/gnat-${{ inputs.gnat_version }}/${GNAT_NAME}.tar.gz"

          echo "Downloading GNAT ${{ inputs.gnat_version }} (${{ env.GNAT_ARCH }}) from '$GNAT_URL'"
          wget -q --show-progress --progress=bar:force:noscroll -O GNAT.tar.gz "$GNAT_URL"
          test $? -ne 0 && echo -e "ERROR: Downloading '$GNAT_URL'" && exit 1
          ls -lAh

          tar -zxf GNAT.tar.gz && rm GNAT.tar.gz
          test $? -ne 0 && echo -e "ERROR: Extracting 'GNAT.tar.gz'" && exit 1
          mv ${GNAT_NAME} gnat

          ./gnat/bin/gnatls -v

          echo "GNAT_BINARY_PATH=$(pwd)/gnat/bin" >> $GITHUB_ENV

      - name: Prepare build environment
        run: |
          mkdir -p build/${{ matrix.backend }}
          echo "PATH=$GNAT_BINARY_PATH:$LLVM_BINARY_PATH:$PATH" >> $GITHUB_ENV

      - name: Check build environemnt
        run: |
          echo $PATH
          echo "which gnat:        $(which gnat) ($($(which gnat) --version))"
          echo "which gnatmake:    $(which gnatmake) ($($(which gnatmake) --version))"
          echo "which llvm-config: $(which llvm-config) ($($(which llvm-config) --version))"

      - name: ⚙ Configure
        run: |
          cd build/${{ matrix.backend }}
          [ '${{ matrix.backend }}' == 'llvm' ] && LLVM_ARGS='--with-llvm-config' || unset LLVM_ARGS

          # Use static libs (including libzstd) and dead-strip (to avoid libz3)
          libzstd=$(brew --prefix zstd)/lib/libzstd.a
          export LLVM_LDFLAGS="$(llvm-config --link-static --libfiles --system-libs | sed -e s@-lzstd@$libzstd@) -Wl,-dead_strip,-dead_strip_dylibs"
          echo $LLVM_LDFLAGS

          # Use classic ld and not lld (which simply crashes)
          NPROC=$(sysctl -n hw.logicalcpu)
          GNATMAKE="gnatmake -j$NPROC" \
          MAKE="make -j$NPROC" \
          LDFLAGS=-Wl,-ld_classic \
          ../../configure --prefix=../../install $LLVM_ARGS

      - name: 🔨 Make
        run: |
          cd build/${{ matrix.backend }}
          make

      - name: 📋 Install
        run: |
          cd build/${{ matrix.backend }}
          sudo make install

      - name: 📤 Upload '${{ inputs.macos_artifact }}-14.0-aarch64-${{ matrix.backend }}' artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.macos_artifact }}-14.0-aarch64-${{ matrix.backend }}
          path: ./install
          if-no-files-found: error
          retention-days: 1

  Test:
    name: Test GHDL on macOS 14.0 (aarch64)
    runs-on: ${{ inputs.macos_image }}
    needs:
      - Build

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.jobs) }}

    env:
      GNAT_ARCH: "aarch64"

    defaults:
      run:
        shell: bash

    steps:
      - name: ⏬ Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ghdl/ghdl

      - name: 📥 Download artifacts '${{ inputs.macos_artifact }}-14.0-aarch64-${{ matrix.backend }}' from 'Build' job
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.macos_artifact }}-14.0-aarch64-${{ matrix.backend }}
          path: install

      - name: Prepare test environment
        run: |
          echo "PATH=$(pwd)/install/bin:$PATH" >> $GITHUB_ENV

      - name: Sanity checks
        run: |
          echo "PATH:       $PATH"
          echo "which ghdl: $(which ghdl)"
          ghdl version

      - name: Run tests in testsuite
        run: |
          cd testsuite
          ./testsuite.sh
